{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, unref as _unref, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, mergeProps as _mergeProps, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-d14c1a3e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"content-wrapper\"\n};\nconst _hoisted_2 = {\n  class: \"total-price-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"cart-menu-name-wrapper\"\n};\nconst _hoisted_4 = {\n  class: \"cart-menu-price-wrapper\"\n};\nconst _hoisted_5 = {\n  class: \"del-btn-wrapper\"\n};\nconst _hoisted_6 = {\n  class: \"cart-menu-name-wrapper\"\n};\nconst _hoisted_7 = {\n  class: \"cart-menu-price-wrapper\"\n};\nconst _hoisted_8 = {\n  class: \"del-btn-wrapper\"\n};\nimport { watch, ref, nextTick } from 'vue';\nimport { onMounted } from 'vue';\nimport { computed } from 'vue';\nconst __default__ = {\n  name: 'MenuListFooter'\n};\nexport default /*#__PURE__*/Object.assign(__default__, {\n  props: ['myCart'],\n  emits: ['delete-from-cart', 'go-to-pay'],\n  setup(__props, {\n    emit: __emit\n  }) {\n    const props = __props;\n    computed(() => {\n      return props.myCart;\n    });\n    const emit = __emit;\n    function deletefromCart(i) {\n      emit('delete-from-cart', i);\n    }\n    let totalPrice = ref(0);\n    let cartisempty = ref(true);\n    watch(props.myCart, newCart => {\n      let tmp = 0;\n      for (let i = 0; i < newCart.length; i++) {\n        tmp += newCart[i].get('menu').price * newCart[i].get('amount');\n      }\n      totalPrice.value = tmp;\n      nextTick(() => {\n        if (myRef.value) {\n          myRef.value.scrollTo(0, myRef.value.scrollHeight);\n        }\n      });\n    });\n    watch(props.myCart, () => {\n      props.myCart.length == 0 ? cartisempty.value = true : cartisempty.value = false;\n    });\n    function gotoPay() {\n      emit('go-to-pay');\n    }\n    const myRef = ref(null);\n    onMounted(() => {});\n    let isSmallScreen = window.matchMedia(\"(max-width: 650px)\");\n    return (_ctx, _cache) => {\n      const _component_v_divider = _resolveComponent(\"v-divider\");\n      const _component_v_card_title = _resolveComponent(\"v-card-title\");\n      const _component_v_btn = _resolveComponent(\"v-btn\");\n      const _component_v_table = _resolveComponent(\"v-table\");\n      const _component_v_bottom_sheet = _resolveComponent(\"v-bottom-sheet\");\n      return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_v_divider, {\n        inset: \"\",\n        color: \"#6A1B9A\",\n        thickness: \"5px\"\n      }), _createElementVNode(\"span\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_v_card_title, null, {\n        default: _withCtx(() => [_createTextVNode(\"총 주문 금액\")]),\n        _: 1\n      }), _createVNode(_component_v_card_title, {\n        class: \"mt-n1\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"￦\" + _toDisplayString(_unref(totalPrice).toLocaleString()), 1)]),\n        _: 1\n      })]), _createElementVNode(\"div\", {\n        class: \"cart-text-wrapper\",\n        ref_key: \"myRef\",\n        ref: myRef\n      }, [_withDirectives(_createVNode(_component_v_table, {\n        density: \"compact\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.myCart, (menu_map, i) => {\n          return _openBlock(), _createElementBlock(\"tr\", {\n            key: i\n          }, [_createElementVNode(\"td\", _hoisted_3, _toDisplayString(menu_map.get('menu').mname) + \"   \" + _toDisplayString(menu_map.get('amount')) + \" 개    \", 1), _createElementVNode(\"td\", _hoisted_4, \" ￦\" + _toDisplayString((menu_map.get('amount') * menu_map.get('menu').price).toLocaleString()), 1), _createElementVNode(\"td\", _hoisted_5, [_createVNode(_component_v_btn, {\n            onClick: () => deletefromCart(i),\n            size: \"small\",\n            variant: \"tonal\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"취소\")]),\n            _: 2\n          }, 1032, [\"onClick\"])])]);\n        }), 128))])]),\n        _: 1\n      }, 512), [[_vShow, !_unref(isSmallScreen).matches]]), _createVNode(_component_v_bottom_sheet, {\n        inset: \"\"\n      }, {\n        activator: _withCtx(({\n          props\n        }) => [_withDirectives(_createVNode(_component_v_btn, _mergeProps(props, {\n          variant: \"tonal\",\n          text: \"카트 보기\"\n        }), null, 16), [[_vShow, _unref(isSmallScreen).matches]])]),\n        default: _withCtx(() => [_withDirectives(_createVNode(_component_v_table, {\n          density: \"compact\"\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(__props.myCart, (menu_map, i) => {\n            return _openBlock(), _createElementBlock(\"tr\", {\n              key: i\n            }, [_createElementVNode(\"td\", _hoisted_6, _toDisplayString(menu_map.get('menu').mname) + \"   \" + _toDisplayString(menu_map.get('amount')) + \" 개    \", 1), _createElementVNode(\"td\", _hoisted_7, \" ￦\" + _toDisplayString((menu_map.get('amount') * menu_map.get('menu').price).toLocaleString()), 1), _createElementVNode(\"td\", _hoisted_8, [_createVNode(_component_v_btn, {\n              onClick: () => deletefromCart(i),\n              size: \"small\",\n              variant: \"tonal\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(\"취소\")]),\n              _: 2\n            }, 1032, [\"onClick\"])])]);\n          }), 128))])]),\n          _: 1\n        }, 512), [[_vShow, !_unref(isSmallScreen).matches]])]),\n        _: 1\n      })], 512), _createVNode(_component_v_btn, {\n        class: \"pay-btn\",\n        variant: \"tonal\",\n        height: \"13vh\",\n        onClick: gotoPay,\n        disabled: _unref(cartisempty),\n        style: {\n          \"background-color\": \"rgb(179, 176, 189)\",\n          \"font-weight\": \"bolder\",\n          \"margin\": \"1vh 1vw\"\n        }\n      }, {\n        default: _withCtx(() => [_createTextVNode(\" 결제하기 \")]),\n        _: 1\n      }, 8, [\"disabled\"])])]);\n    };\n  }\n});","map":{"version":3,"names":["watch","ref","nextTick","onMounted","computed","__default__","name","props","__props","myCart","emit","__emit","deletefromCart","i","totalPrice","cartisempty","newCart","tmp","length","get","price","value","myRef","scrollTo","scrollHeight","gotoPay","isSmallScreen","window","matchMedia"],"sources":["C:/Users/1/Desktop/vv/frontend/src/components/MenuListFooter.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <v-divider inset color=\"#6A1B9A\" thickness=\"5px\"></v-divider>\r\n        <span class=\"content-wrapper\">\r\n            <div class=\"total-price-wrapper\">\r\n                <v-card-title>총 주문 금액</v-card-title>\r\n                <v-card-title class=\"mt-n1\">￦{{ totalPrice.toLocaleString() }}</v-card-title>\r\n            </div>\r\n            <div class=\"cart-text-wrapper\" ref=\"myRef\">\r\n                <v-table density=\"compact\" v-show=\"!isSmallScreen.matches\">\r\n                    <tbody>\r\n                        <tr v-for=\"(menu_map, i) in myCart\" :key=\"i\">\r\n                            <td class=\"cart-menu-name-wrapper\">\r\n                                {{ menu_map.get('menu').mname }} &nbsp;&nbsp;{{ menu_map.get('amount') }} 개 &nbsp;&nbsp;\r\n                            </td>\r\n                            <td class=\"cart-menu-price-wrapper\">\r\n                                ￦{{ ((menu_map.get('amount') * menu_map.get('menu').price)).toLocaleString() }}\r\n\r\n                            </td>\r\n                            <td class=\"del-btn-wrapper\">\r\n                                <v-btn @click=\"() => deletefromCart(i)\" size=\"small\" variant=\"tonal\">취소</v-btn>\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n                    </tbody>\r\n                </v-table>\r\n                <!--                  sheet               -->\r\n                <v-bottom-sheet inset>\r\n                    <template v-slot:activator=\"{ props }\">\r\n                        <v-btn v-bind=\"props\" variant=\"tonal\" text=\"카트 보기\" v-show=\"isSmallScreen.matches\"></v-btn>\r\n                    </template>\r\n                    <v-table density=\"compact\" v-show=\"!isSmallScreen.matches\">\r\n                        <tbody>\r\n                            <tr v-for=\"(menu_map, i) in myCart\" :key=\"i\">\r\n                                <td class=\"cart-menu-name-wrapper\">\r\n                                    {{ menu_map.get('menu').mname }} &nbsp;&nbsp;{{ menu_map.get('amount') }} 개 &nbsp;&nbsp;\r\n                                </td>\r\n                                <td class=\"cart-menu-price-wrapper\">\r\n                                    ￦{{ ((menu_map.get('amount') * menu_map.get('menu').price)).toLocaleString() }}\r\n\r\n                                </td>\r\n                                <td class=\"del-btn-wrapper\">\r\n                                    <v-btn @click=\"() => deletefromCart(i)\" size=\"small\" variant=\"tonal\">취소</v-btn>\r\n                                </td>\r\n\r\n\r\n                            </tr>\r\n                        </tbody>\r\n                    </v-table>\r\n                </v-bottom-sheet>\r\n                <!--                  sheet               -->\r\n            </div>\r\n\r\n            <v-btn class=\"pay-btn\" variant=\"tonal\" height=\"13vh\" @click=\"gotoPay\" :disabled=\"cartisempty\"\r\n                style=\" background-color: rgb(179, 176, 189); font-weight: bolder;  margin: 1vh 1vw;\">\r\n                결제하기\r\n            </v-btn>\r\n        </span>\r\n    </div>\r\n</template>\r\n\r\n\r\n\r\n\r\n<script setup>\r\n\r\nimport { watch, ref, nextTick } from 'vue';\r\nimport { onMounted } from 'vue';\r\nimport { defineProps, defineEmits } from 'vue';\r\nimport { computed } from 'vue';\r\n\r\nconst props = defineProps(['myCart']);\r\n\r\ncomputed(() => { return props.myCart })\r\n\r\nconst emit = defineEmits(['delete-from-cart', 'go-to-pay']);\r\n\r\n\r\nfunction deletefromCart(i) {\r\n    emit('delete-from-cart', i);\r\n}\r\n\r\nlet totalPrice = ref(0);\r\n\r\nlet cartisempty = ref(true);\r\n\r\n\r\nwatch(props.myCart, (newCart) => {\r\n    let tmp = 0;\r\n    for (let i = 0; i < newCart.length; i++) {\r\n        tmp += newCart[i].get('menu').price * newCart[i].get('amount');\r\n    }\r\n    totalPrice.value = tmp;\r\n    nextTick(() => {\r\n        if (myRef.value) {\r\n            myRef.value.scrollTo(0, myRef.value.scrollHeight);\r\n        }\r\n    });\r\n})\r\n\r\nwatch(props.myCart, () => {\r\n    props.myCart.length == 0 ? cartisempty.value = true : cartisempty.value = false;\r\n})\r\n\r\n\r\nfunction gotoPay() {\r\n    emit('go-to-pay');\r\n}\r\n\r\nconst myRef = ref(null);\r\n\r\nonMounted(() => {\r\n\r\n});\r\n\r\n\r\nlet isSmallScreen = window.matchMedia(\"(max-width: 650px)\")\r\n\r\n\r\n</script>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n    name: 'MenuListFooter'\r\n}\r\n\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.pay-btn {\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n\r\n}\r\n\r\n\r\n\r\n.total-price-wrapper {\r\n    padding-top: 2vh;\r\n    padding-left: 2vw;\r\n    position: absolute;\r\n    left: 0;\r\n    display: inline;\r\n    height: 100%;\r\n}\r\n\r\n/* .menu-text-wrapper {\r\n    position: relative;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n.del-btn-wrapper {\r\n    position: absolute;\r\n    right: 0;\r\n    margin-right: 1vw;\r\n} */\r\n\r\n.cart-text-wrapper {\r\n    height: 15vh;\r\n    overflow: auto;\r\n}\r\n\r\n.content-wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n}\r\n\r\n.cart-menu-name-wrapper {}\r\n\r\n.cart-menu-price-wrapper {}\r\n\r\n\r\n.del-btn-wrapper {}\r\n</style>"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,SAASA,KAAK,EAAEC,GAAG,EAAEC,QAAQ,QAAQ,KAAK;AAC1C,SAASC,SAAS,QAAQ,KAAK;AAE/B,SAASC,QAAQ,QAAQ,KAAK;AAuD9B,MAAAC,WAAA,GAAe;EACXC,IAAI,EAAE;AACV,CAAC;;;;;;;IAvDD,MAAMC,KAAK,GAAGC,OAAuB;IAErCJ,QAAQ,CAAC,MAAM;MAAE,OAAOG,KAAK,CAACE,MAAM;IAAC,CAAC,CAAC;IAEvC,MAAMC,IAAI,GAAGC,MAA8C;IAG3D,SAASC,cAAcA,CAACC,CAAC,EAAE;MACvBH,IAAI,CAAC,kBAAkB,EAAEG,CAAC,CAAC;IAC/B;IAEA,IAAIC,UAAU,GAAGb,GAAG,CAAC,CAAC,CAAC;IAEvB,IAAIc,WAAW,GAAGd,GAAG,CAAC,IAAI,CAAC;IAG3BD,KAAK,CAACO,KAAK,CAACE,MAAM,EAAGO,OAAO,IAAK;MAC7B,IAAIC,GAAG,GAAG,CAAC;MACX,KAAK,IAAIJ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,OAAO,CAACE,MAAM,EAAEL,CAAC,EAAE,EAAE;QACrCI,GAAG,IAAID,OAAO,CAACH,CAAC,CAAC,CAACM,GAAG,CAAC,MAAM,CAAC,CAACC,KAAK,GAAGJ,OAAO,CAACH,CAAC,CAAC,CAACM,GAAG,CAAC,QAAQ,CAAC;MAClE;MACAL,UAAU,CAACO,KAAK,GAAGJ,GAAG;MACtBf,QAAQ,CAAC,MAAM;QACX,IAAIoB,KAAK,CAACD,KAAK,EAAE;UACbC,KAAK,CAACD,KAAK,CAACE,QAAQ,CAAC,CAAC,EAAED,KAAK,CAACD,KAAK,CAACG,YAAY,CAAC;QACrD;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IAEFxB,KAAK,CAACO,KAAK,CAACE,MAAM,EAAE,MAAM;MACtBF,KAAK,CAACE,MAAM,CAACS,MAAM,IAAI,CAAC,GAAGH,WAAW,CAACM,KAAK,GAAG,IAAI,GAAGN,WAAW,CAACM,KAAK,GAAG,KAAK;IACnF,CAAC,CAAC;IAGF,SAASI,OAAOA,CAAA,EAAG;MACff,IAAI,CAAC,WAAW,CAAC;IACrB;IAEA,MAAMY,KAAK,GAAGrB,GAAG,CAAC,IAAI,CAAC;IAEvBE,SAAS,CAAC,MAAM,CAEhB,CAAC,CAAC;IAGF,IAAIuB,aAAa,GAAGC,MAAM,CAACC,UAAU,CAAC,oBAAoB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}